import org.jetbrains.kotlin.gradle.tasks.KotlinNativeCompile

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

repositories {
    mavenCentral()
    maven { url 'https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev' }
    mavenLocal()

}

kotlin {
    infra {
        // According to https://kotlinlang.org/docs/native-target-support.html

        // Tier 1
        target("linuxX64")

        // Tier 2
        target("linuxArm64")

        // Tier 3
        target("androidNativeArm32")
        target("androidNativeArm64")
        target("androidNativeX86")
        target("androidNativeX64")
        target("mingwX64")

        common("darwin") {
            // Tier 1
            target("macosX64")
            target("macosArm64")
            target("iosSimulatorArm64")
            target("iosX64")

            // Tier 2
            target("watchosSimulatorArm64")
            target("watchosX64")
            target("watchosArm32")
            target("watchosArm64")
            target("tvosSimulatorArm64")
            target("tvosX64")
            target("tvosArm64")
            target("iosArm64")

            // Tier 3
            target("watchosDeviceArm64")
        }
    }

    jvm()
    js("jsIr", IR) { nodejs() }
    wasm("wasmJs") { d8() }

    sourceSets.all {
        kotlin.srcDirs = ["$it.name/src"]
        resources.srcDirs = ["$it.name/resources"]
        languageSettings {
            progressiveMode = true
            optIn('kotlin.experimental.ExperimentalNativeApi')
            optIn("kotlinx.cinterop.ExperimentalForeignApi")
            languageVersion = kotlin_language_version
        }
    }

    sourceSets {
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
            }
        }
        jvmMain {
            dependsOn(commonMain)
            dependencies {
                compileOnly "org.openjdk.jmh:jmh-core:$jmhVersion"
            }
        }
        jvmTest {
            dependencies {
                implementation "org.openjdk.jmh:jmh-core:$jmhVersion"
            }
        }
        jsMain {
            dependsOn(commonMain)
            jsIrMain.dependsOn(it)
        }
        nativeMain {
        }
    }
}

if (project.findProperty("publication_repository") == "space") {
    // publish to Space repository
    publishing {
        repositories {
            maven {
                name = "space"
                url = "https://maven.pkg.jetbrains.space/kotlin/p/kotlinx/dev"
                credentials {
                    username = project.findProperty("space.user")
                    password = project.findProperty("space.token")
                }
            }
        }
    }
}

// Workaround for TeamCity build failure:
// Task 'compileTestKotlinLinuxX64' uses this output of task 'signLinuxX64Publication' without declaring an explicit or implicit dependency.
// TODO: Find out and fix the issue
tasks.withType(KotlinNativeCompile).matching { it.name.toLowerCase().contains("test") }.configureEach {
    it.dependsOn(tasks.withType(Sign))
}
